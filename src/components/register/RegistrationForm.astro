---
import Input from './Input.astro'

const { email, uid } = Astro.props
---

<div class='space-y-2 pb-4 md:space-y-4'>
  <h1 class='text-2xl font-bold md:text-4xl'>Regístrate al Evento</h1>
  <ul class='space list-disc space-y-2 pl-4 leading-tight marker:text-green-three'>
    <li>La entrada al evento tiene un costo de XX Bs. e incluye refrigerio.</li>
    <li>Tu comprobante de pago será revisado para validar tu registro.</li>
  </ul>
</div>

<form>
  <input type='hidden' id='uid' name='uid' value={uid} />

  <Input title='Email' type='email' name='email' value={email} required readonly />
  <Input title='Nombre(s)' name='firstname' required />
  <Input title='Apellido(s)' name='lastname' required />
  <Input
    title='Número de teléfono'
    subtitle='Incluye el código de país en caso de no ser de Bolivia.'
    name='phone'
    required
  />

  <label class='my-4 block font-medium dark:text-white' for='voucher'>
    Comprobante de pago
    <span class='font-bold text-red'>*</span>

    <input
      class='my-2 block w-full cursor-pointer rounded-lg border text-sm file:mr-4 file:border-0 file:border-r-2 file:bg-green-two file:px-4 file:py-2'
      id='voucher'
      name='voucher'
      type='file'
      accept='image/*'
    />
    <span class='text-sm text-red' id={`error-voucher`}></span>
  </label>

  <Input
    title='(Opcional) ¿Tienes alguna alergia o restricción alimentaria?'
    name='dietaryRestriction'
  />

  <button
    class='group-invalid:disabled w-full rounded-lg border-2 bg-golden py-2 font-semibold text-black'
    type='submit'
  >
    Regístrate
  </button>
</form>

<script>
  import { actions, isInputError } from 'astro:actions'
  import { navigate } from 'astro:transitions/client'

  const form = document.querySelector('form')

  for (const input of form.elements as HTMLCollectionOf<HTMLInputElement>) {
    input.addEventListener('invalid', () => {
      document.getElementById(`error-${input.name}`).textContent = 'Este campo es requerido.'
    })

    input.addEventListener('input', () => {
      document.getElementById(`error-${input.name}`).textContent = ''
    })
  }

  form.addEventListener('submit', async event => {
    event.preventDefault()

    const formData = new FormData(form)
    const { error } = await actions.register(formData)

    if (!error) {
      navigate('/registro')
      return
    }

    if (isInputError(error)) {
      console.log(error.fields)

      for (const [fieldName, fieldErrors] of Object.entries(error.fields)) {
        document.querySelector(`#error-${fieldName}`).textContent = fieldErrors.join(', ')
      }
    }
  })
</script>
